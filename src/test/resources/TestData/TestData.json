
[
  {
    "testCaseId": "TC_01_userLogin",
    "scenarioName": "Check user able to login as admin with invalid email format",
    "scenarioType": "Negative",
    "endpoint": "/login",
    "method": "POST",
    "userLoginEmail": "Team202#$#.gmail.com",
    "password": "test",
    "expectedStatusCode": 401,
    "expectedStatusLine": "HTTP/1.1 401 Unauthorized",
    "expectedContentType": "application/json"
  },
  {
    "testCaseId": "TC_02_userLogin",
    "scenarioName": "Check user able to login as admin with invalid Password",
    "scenarioType": "Negative",
    "endpoint": "/login",
    "method": "POST",
    "userLoginEmail": "Team202@gmail.com",
    "password": "test1233",
    "expectedStatusCode": 401,
    "expectedStatusLine": "HTTP/1.1 401 Unauthorized",
    "expectedContentType": "application/json"
  },
  {
    "testCaseId": "TC_03_userLogin",
    "scenarioName": "Check user able to login as admin with invalid email",
    "scenarioType": "Negative",
    "endpoint": "/login",
    "method": "POST",
    "userLoginEmail": "Team20212558@gmail.com",
    "password": "test",
    "expectedStatusCode": 401,
    "expectedStatusLine": "HTTP/1.1 401 Unauthorized",
    "expectedContentType": "application/json"
  },
  {
    "testCaseId": "TC_04_userLogin",
    "scenarioName": "Check user able to login as admin with empty credentials",
    "scenarioType": "Negative",
    "endpoint": "/login",
    "method": "POST",
    "userLoginEmail": "",
    "password": "",
    "expectedStatusCode": 401,
    "expectedStatusLine": "HTTP/1.1 401 Unauthorized",
    "expectedContentType": "application/json"
  },
  {
    "testCaseId": "TC_05_userLogin",
    "scenarioName": "Check user able to login as admin with valid credential and invalid method",
    "scenarioType": "Negative",
    "endpoint": "/login",
    "method": "GET",
    "userLoginEmail": "Team401@gmail.com",
    "password": "test",
    "expectedStatusCode": 405,
    "expectedStatusLine": "HTTP/1.1 405 Method Not Allowed",
    "expectedContentType": "application/json"
  },
  {
    "testCaseId": "TC_06_userLogin",
    "scenarioName": "Check user able to login as admin with valid credential and invalid endpoint",
    "scenarioType": "Negative",
    "endpoint": "/loginnio",
    "method": "POST",
    "userLoginEmail": "Team401@gmail.com",
    "password": "test",
    "expectedStatusCode": 401,
    "expectedStatusLine": "HTTP/1.1 401 Unauthorized",
    "expectedContentType": "application/json"
  },
  {
    "testCaseId": "TC_07_userLogin",
    "scenarioName": "Check user able to login as admin with valid credential and invalid content type",
    "scenarioType": "Negative",
    "endpoint": "/login",
    "method": "POST",
    "userLoginEmail": "Team401@gmail.com",
    "password": "test",
    "expectedStatusCode": 415,
    "expectedStatusLine": "HTTP/1.1 415 Unsupported Media Type",
    "expectedContentType": "application/json"
  },
  {
    "testCaseId": "TC_08_userLogin",
    "scenarioName": "Check user able to login as dietician with invalid email",
    "scenarioType": "Negative",
    "endpoint": "/login",
    "method": "POST",
    "userLoginEmail": "Team20212558@gmail.com",
    "password": "test",
    "expectedStatusCode": 401,
    "expectedStatusLine": "HTTP/1.1 401 Unauthorized",
    "expectedContentType": "application/json"
  },
  {
    "testCaseId": "TC_09_userLogin",
    "scenarioName": "Check user able to login as dietician with invalid email format",
    "scenarioType": "Negative",
    "endpoint": "/login",
    "method": "POST",
    "userLoginEmail": "Team402#$#.gmail.com",
    "password": "test",
    "expectedStatusCode": 401,
    "expectedStatusLine": "HTTP/1.1 401 Unauthorized",
    "expectedContentType": "application/json"
  },
  {
    "testCaseId": "TC_10_userLogin",
    "scenarioName": "Check user able to login as dietician with invalid Password",
    "scenarioType": "Negative",
    "endpoint": "/login",
    "method": "POST",
    "userLoginEmail": "Team401@gmail.com",
    "password": "test1233",
    "expectedStatusCode": 401,
    "expectedStatusLine": "HTTP/1.1 401 Unauthorized",
    "expectedContentType": "application/json"
  },
  {
    "testCaseId": "TC_11_userLogin",
    "scenarioName": "Check user able to login as patient with invalid email",
    "scenarioType": "Negative",
    "endpoint": "/login",
    "method": "POST",
    "userLoginEmail": "Team20212558@gmail.com",
    "password": "test",
    "expectedStatusCode": 401,
    "expectedStatusLine": "HTTP/1.1 401 Unauthorized",
    "expectedContentType": "application/json"
  },
  {
    "testCaseId": "TC_12_userLogin",
    "scenarioName": "Check user able to login as patient with invalid email format",
    "scenarioType": "Negative",
    "endpoint": "/login",
    "method": "POST",
    "userLoginEmail": "Team402#$#.gmail.com",
    "password": "test",
    "expectedStatusCode": 401,
    "expectedStatusLine": "HTTP/1.1 401 Unauthorized",
    "expectedContentType": "application/json"
  },
  {
    "testCaseId": "TC_13_userLogin",
    "scenarioName": "Check user able to login as patient with invalid Password",
    "scenarioType": "Negative",
    "endpoint": "/login",
    "method": "POST",
    "userLoginEmail": "Team401@gmail.com",
    "password": "test1233",
    "expectedStatusCode": 401,
    "expectedStatusLine": "HTTP/1.1 401 Unauthorized",
    "expectedContentType": "application/json"
  },
  {
    "testCaseId": "TC_14_userLogin",
    "scenarioName": "Check user able to login as admin with valid data",
    "scenarioType": "Positive",
    "endpoint": "/login",
    "method": "POST",
    "userLoginEmail": "Team401@gmail.com",
    "password": "test",
    "expectedStatusCode": 200,
    "expectedStatusLine": "HTTP/1.1 200 OK",
    "expectedContentType": "application/json"
  },

  {
      "scenarioName": "Entering valid report and valid patient ID",
      "scenarioType": "Negative",
      "endpoint": "/patient/newReports/",
      "method": "PUT",
      "reportFilePath": "src/test/resources/TestData/Report1.pdf",
      "expectedStatusCode": 401,
      "expectedStatusLine": "HTTP/1.1 401 Unauthorized",
      "expectedContentType": "application/json"
    },
  {
    "scenarioName": "Entering valid data into the form-data key and value fields and valid patient ID token",
    "scenarioType": "Negative",
    "endpoint": "/patient/newReports/",
    "method": "PUT",
    "reportFilePath": "src/test/resources/TestData/Report1.pdf",
    "expectedStatusCode": 403,
    "expectedStatusLine": "HTTP/1.1 403 Forbidden",
	"expectedContentType": "application/json",
	"expecterErrorMsg" : "Access is denied"
	},
	{
   "scenarioName": "Valid data Mandatory and additional details into the form-data key and value fields and valid patient ID",
   "scenarioType": "Positive",
   "endpoint": "/patient/newReports/",
   "method": "PUT",
   "reportFilePath": "src/test/resources/TestData/Report1.pdf",
   "patientinfo" : 	   { "FirstName": "Melissa",
   "LastName": "HackerTest",
   "ContactNumber": "2543610258",
   "Email": "melissa@gmail.com",
   "Allergy": "Egg",
   "FoodPreference": "Vegan",
   "CuisineCategory":"Indian",
   "DateOfBirth": "1977-02-14"
   },
   "vitals" : 	   {"Weight" : 6.2,
   "Height" : 60.5,
   "Temperature" : 95,
   "SP" : 100,
   "DP" : 80
   },
   "expectedStatusCode": 200,
   "expectedStatusLine": "HTTP/1.1 200 OK",	
   "expectedContentType": "application/json"
},
{
   "scenarioName": "Except valid vitals data and valid patient ID",
   "scenarioType": "Positive",
   "endpoint": "/patient/newReports/",
   "method": "PUT",
   "reportFilePath": "src/test/resources/TestData/Report1.pdf",
   "patientinfo" : 	   { "FirstName": "Melissa",
   "LastName": "HackerTest",
   "ContactNumber": "2543610258",
   "Email": "melissa@gmail.com",
   "Allergy": "Egg",
   "FoodPreference": "Vegan",
   "CuisineCategory":"Indian",
   "DateOfBirth": "1977-02-14"
   },
   "vitals" : 	   {"Weight" : 6.2,
   "Height" : 60.5,
   "Temperature" : 95,
   "SP" : 100,
   "DP" : 80
   },
   "expectedStatusCode": 200,
   "expectedStatusLine": "HTTP/1.1 200 OK",
	"expectedContentType": "application/json"
	},
{
   "scenarioName": "Data into the form-data key and value fields except file and valid patient ID",
   "scenarioType": "Positive",
   "endpoint": "/patient/newReports/",
   "method": "PUT",
   "reportFilePath": "src/test/resources/TestData/Report1.pdf",
   "patientinfo" : 	   { "FirstName": "Melissa",
   "LastName": "HackerTest",
   "ContactNumber": "2543610258",
   "Email": "melissa@gmail.com",
	"Allergy": "Egg",
	"FoodPreference": "Vegan",
	"CuisineCategory":"Indian",
	"DateOfBirth": "1977-02-14"
	},
	"vitals" : 	   {"Weight" : 66.2,
	"Height" : 60.5,
	"Temperature" : 95,
	"SP" : 77,
	"DP" : 80
	},
	 "expectedStatusCode": 200,
	 "expectedStatusLine": "HTTP/1.1 200 OK",
	"expectedContentType": "application/json"
},	
{
   "scenarioName": "Invalid Additional details data into the form-data key and value fields",
   "scenarioType": "Negative",
   "endpoint": "/patient/newReports/",
   "method": "PUT",
   "reportFilePath": "src/test/resources/TestData/HyperThyroid_Report_final.docx",
   "patientinfo" : 	   { "FirstName": "Melissa",
   "LastName": "HackerTest",
   "ContactNumber": "2543610258",
   "Email": "melissa@gmail.com",
	"Allergy": "Egg",
	"FoodPreference": "Vegan",
	"CuisineCategory":"Indian",
	"DateOfBirth": "1977-02-14"
	},
	"vitals" : 	   {"Weight" : 66.2,
	"Height" : 60.5,
	"Temperature" : 95,
	"SP" : 77,
	"DP" : 80
	},
	 "expectedStatusCode": 400,
	 "expectedStatusLine": "HTTP/1.1 400 BAD REQUEST"
},
{
   "scenarioName": "Invalid Additional details data into the form-data key and value fields and invalid patient ID",
   "scenarioType": "Negative",
   "endpoint": "/patient/newReports/",
   "method": "PUT",
   "reportFilePath": "src/test/resources/TestData/HyperThyroid_Report_final.docx",
   "invaidpatientid" : 9874563,
	"vitals" : 	   {"Weight" : 66.2,
	"Height" : 60.5,
	"Temperature" : 95,
	"SP" : 77,
	"DP" : 80
	},
	 "expectedStatusCode": 404,
	 "expectedStatusLine": "HTTP/1.1 404 Not Found"
},
{
   "scenarioName": "Entering valid data into the form-data key and value fields and valid patient ID",
   "scenarioType": "Negative",
   "endpoint": "/patient/newReports/",
   "method": "POST",
   "reportFilePath": "src/test/resources/TestData/Report1.pdf",
	"vitals" : 	   {"Weight" : 66.2,
	"Height" : 60.5,
	"Temperature" : 95,
	"SP" : 77,
	"DP" : 80
	},
	 "expectedStatusCode": 405,
	 "expectedStatusLine": "HTTP/1.1 405 Method Not Allowed"
},
{
   "scenarioName": "Valid data and with invalid reports endpoint",
   "scenarioType": "Negative",
   "endpoint": "/dietician",
   "method": "PUT",
   "reportFilePath": "src/test/resources/TestData/Report1.pdf",
	"vitals" : 	   {"Weight" : 66.2,
	"Height" : 60.5,
	"Temperature" : 95,
	"SP" : 77,
	"DP" : 80
	},
	 "expectedStatusCode": 404,
	 "expectedStatusLine": "HTTP/1.1 404 Not Found"
},
{
   "scenarioName": "Valid patient ID with invalid content type",
   "scenarioType": "Negative",
   "endpoint": "patient/newReports/",
   "method": "PUT",
   "reportFilePath": "src/test/resources/TestData/Report1.pdf",
	"vitals" : 	   {"Weight" : 66.2,
	"Height" : 60.5,
	"Temperature" : 95,
	"SP" : 77,
	"DP" : 80
	},
	 "expectedStatusCode": 415,
	 "expectedStatusLine": "HTTP/1.1 415 Unsupported Media Type"
},

{
  "scenarioName": "GET morbidity request to retrieve patients",
  "scenarioType": "Positive",
  "endpoint": "/patient/testReports/",
  "method": "GET",
  "expectedStatusCode": 200,
  "expectedStatusLine": "HTTP/1.1 200 OK",
  "expectedContentType": "application/json"
},
{
  "scenarioName": "no auth create GET morbidity",
  "scenarioType": "Negative",
  "endpoint": "/patient/testReports/",
  "method": "GET",
  "expectedStatusCode": 401,
  "expectedStatusLine": "HTTP/1.1 401 Unauthorized"
},
{
  "scenarioName": "GET morbidity request with admin token",
  "scenarioType": "Negative",
  "endpoint": "/patient/testReports/",
  "method": "GET",
  "expectedStatusCode": 403,
  "expectedStatusLine": "HTTP/1.1 403 Forbidden"
},
{
  "scenarioName": "POST morbidity request",
  "scenarioType": "Negative",
  "endpoint": "/patient/testReports/",
  "method": "POST",
  "expectedStatusCode": 405,
  "expectedStatusLine": "HTTP/1.1 405 Method Not Allowed"
},
{
  "scenarioName": "invalid patient id to retrieve patients morbidity",
  "scenarioType": "Negative",
  "endpoint": "/patient/testReports/",
  "method": "GET",
  "invaidpatientid" : 9874563,
  "expectedStatusCode": 404,
  "expectedStatusLine": "HTTP/1.1 404 Not Found"
},
{
  "scenarioName": "GET morbidity request with invalid endpoint",
  "scenarioType": "Negative",
  "endpoint": "/login/",
  "method": "GET",
  "expectedStatusCode": 404,
  "expectedStatusLine": "HTTP/1.1 404 Not Found"
},
{
  "scenarioName": "Retrieve patients by file id",
  "scenarioType": "Positive",
  "endpoint": "/patient/testReports/viewFile/",
  "method": "GET",
  "expectedStatusCode": 200,
  "expectedStatusLine": "HTTP/1.1 200 OK",
  "expectedContentType": "application/pdf"
},
{
  "scenarioName": "Retrieve patients by file id with no auth",
  "scenarioType": "Negative",
  "endpoint": "/patient/testReports/viewFile/",
  "method": "GET",
  "expectedStatusCode": 401,
  "expectedStatusLine": "HTTP/1.1 401 Unauthorized"
},
{
  "scenarioName": "Retrieve patients by file id with admin token",
  "scenarioType": "Negative",
  "endpoint": "/patient/testReports/viewFile/",
  "method": "GET",
  "expectedStatusCode": 403,
  "expectedStatusLine": "HTTP/1.1 403 Forbidden"
},
{
  "scenarioName": "Retrieve patients by file id with invalid method",
  "scenarioType": "Negative",
  "endpoint": "/patient/testReports/viewFile/",
  "method": "POST",
  "expectedStatusCode": 405,
  "expectedStatusLine": "HTTP/1.1 405 Method Not Allowed"
},
{
  "scenarioName": "Retrieve patients by invalid file id",
  "scenarioType": "Negative",
  "endpoint": "/patient/testReports/viewFile/",
  "method": "GET",
  "invaidfileid" : "invalidfileid",
  "expectedStatusCode": 404,
  "expectedStatusLine": "HTTP/1.1 404 Not Found"
},
{
  "scenarioName": "Retrieve patients by file id with invalid endpoint",
  "scenarioType": "Negative",
  "endpoint": "/login/",
  "method": "GET",
  "expectedStatusCode": 404,
  "expectedStatusLine": "HTTP/1.1 404 Not Found"
},
{
  "scenarioName": "Delete patient by ID",
  "scenarioType": "Positive",
  "endpoint": "/patient/",
  "method": "DELETE",
  "expectedStatusCode": 200,
  "expectedStatusLine": "HTTP/1.1 200 OK",
  "expectedContentType": "application/pdf"
},
{
  "scenarioName": "Delete patient by ID with no auth",
  "scenarioType": "Negative",
  "endpoint": "/patient/",
  "method": "DELETE",
  "expectedStatusCode": 401,
  "expectedStatusLine": "HTTP/1.1 401 Unauthorized"
},
{
  "scenarioName": "Delete patient by ID with admin token",
  "scenarioType": "Negative",
  "endpoint": "/patient/",
  "method": "DELETE",
  "expectedStatusCode": 403,
  "expectedStatusLine": "HTTP/1.1 403 Forbidden"
},
{
  "scenarioName": "Delete patient by ID with patient token",
  "scenarioType": "Negative",
  "endpoint": "/patient/",
  "method": "DELETE",
  "expectedStatusCode": 403,
  "expectedStatusLine": "HTTP/1.1 403 Forbidden"
},
{
  "scenarioName": "Delete patient by ID with invalid method",
  "scenarioType": "Negative",
  "endpoint": "/patient/",
  "method": "POST",
  "expectedStatusCode": 405,
  "expectedStatusLine": "HTTP/1.1 405 Method Not Allowed"
},
{
  "scenarioName": "Delete patient by invalid ID",
  "scenarioType": "Negative",
  "endpoint": "/patient/",
  "method": "DELETE",
  "invaidpatientid" : 985632,
  "expectedStatusCode": 404,
  "expectedStatusLine": "HTTP/1.1 404 Not Found"
},
{
  "scenarioName": "Delete patient by ID with invalid endpoint",
  "scenarioType": "Negative",
  "endpoint": "/login/",
  "method": "DELETE",
  "expectedStatusCode": 404,
  "expectedStatusLine": "HTTP/1.1 404 Not Found"
},
  

  {
    "testCaseId": "TC_15_userLogin",
    "scenarioName": "Check user able to login as dietician with valid credential",
    "scenarioType": "Positive",
    "endpoint": "/login",
    "method": "POST",
    "userLoginEmail": "teamcalorie@gmail.com",
    "password": "Posh99",
    "expectedStatusCode": 200,
    "expectedStatusLine": "HTTP/1.1 200 OK",
    "expectedContentType": "application/json"
  },
  {
    "testCaseId": "TC_16_userLogin",
    "scenarioName": "Check user able to login as patient with valid credential",
    "scenarioType": "Positive",
    "endpoint": "/login",
    "method": "POST",
    "userLoginEmail": "team02_ninja@gmail.com",
    "password": "test",
    "expectedStatusCode": 200,
    "expectedStatusLine": "HTTP/1.1 200 OK",
    "expectedContentType": "application/json"
  },
  {
    "testCaseId": "TC_01_createDietician",
    "scenarioName": "Check admin able to create dietician with valid data and token",
    "scenarioType": "Positive",
    "endpoint": "/dietician",
    "method": "POST",
    "FirstName": "Vishnu",
    "LastName": "Raj",
    "ContactNumber": "4455221133",
    "DateOfBirth": "1990-08-25",
    "Email": "vishnu_02raj@gmail.com",
    "hospitalName": "Kooper Hospital",
    "hospitalStreet": "Streetone",
    "hospitalCity": "Baroda",
    "hospitalPincode": "258969",
    "education": "PhD in Nutritional Sciences",
    "expectedStatusCode": 201,
    "expectedStatusLine": "HTTP/1.1 201 Created",
    "expectedContentType": "application/json"

  },

  {
    "testCaseId": "TC_02_createDietician",
    "scenarioName": "Check admin able to create dietician only with valid mandatory details",
    "scenarioType": "Positive",
    "endpoint": "/dietician",
    "method": "POST",
    "firstname": "Raju",
    "lastname": "Raja",
    "contactNumber": "4455222244",
    "dateOfBirth": "1983-07-23",
    "email": "raja_02raj@gmail.com",
    "hospitalName": "vishnu Hospital",
    "hospitalStreet": "one",
    "hospitalCity": "Baroda usman",
    "hospitalPincode": "258788",
    "education": "PhD in Nutritional Sciences",
    "expectedStatusCode": 201,
    "expectedStatusLine": "HTTP/1.1 201 Created",
    "expectedContentType": "application/json"
  },
  {
    "testCaseId": "TC_03_GetAllDieticianAs Admin",
    "scenarioName": "Check admin able to retrieve all dietician with invalid endpoint",
    "scenarioType": "Negative",
    "endpoint": "/dieticiansssd",
    "method": "GET",
    "expectedStatusCode": 404,
    "expectedStatusLine": "HTTP/1.1 404 Not Found",
    "expectedContentType": "application/json"
  },
  {
    "testCaseId": "TC_02_GetAllDieticianAs Admin",
    "scenarioName": "Check admin able to retrieve all dietician with invalid method",
    "scenarioType": "Negative",
    "endpoint": "/dietician",
    "method": "PUT",
    "expectedStatusCode": 405,
    "expectedStatusLine": "HTTP/1.1 405 Method Not Allowed",
    "expectedContentType": "application/json"
  },
  {
    "testCaseId": "TC_01_GetAllDieticianAs Admin",
    "scenarioName": "Check admin able to retrieve all dietician",
    "scenarioType": "Positive",
    "endpoint": "/dietician",
    "method": "GET",
    "expectedStatusCode": 200,
    "expectedStatusLine": "HTTP/1.1 200 OK",
    "expectedContentType": "application/json"
  },
  {
    "testCaseId": "TC_01_userLogoutPatient",
    "scenarioName": "Check admin able to logout",
    "scenarioType": "Positive",
    "endpoint": "/logoutdietician",
    "method": "GET",
    "expectedStatusCode": 200,
    "expectedStatusLine": "HTTP/1.1 200 OK",
    "expectedStatusMessage": "Logout successful"
    
  },
  {
    "testCaseId": "TC_02_userLogoutPatient",
    "scenarioName": "Check dietician able to logout",
    "scenarioType": "Positive",
    "endpoint": "/logoutdietician",
    "method": "GET",
    "expectedStatusCode": 200,
    "expectedStatusLine": "HTTP/1.1 200 OK",
    "expectedStatusMessage": "Logout successful"
    
  },
  {
    "testCaseId": "TC_03_userLogoutPatient",
    "scenarioName": "Check patient able to logout",
    "scenarioType": "Positive",
    "endpoint": "/logoutdietician",
    "method": "GET",
    "expectedStatusCode": 200,
    "expectedStatusLine": "HTTP/1.1 200 OK",
    "expectedStatusMessage": "Logout successful"
    
  },
  {
    "testCaseId": "TC_04_userLogoutPatient",
    "scenarioName": "Check admin able to logout  with invalid method",
    "scenarioType": "Negative",
    "endpoint": "/logoutdietician",
    "method": "POST",
    "expectedStatusCode": 405,
    "expectedStatusLine": "HTTP/1.1 405 Method Not Allowed",
    "expectedStatusMessage": "Logout successful"
    
  },
  {
    "testCaseId": "TC_05_userLogoutPatient",
    "scenarioName": "Check dietician able to logout  with invalid method",
    "scenarioType": "Negative",
    "endpoint": "/logoutdietician",
    "method": "POST",
    "expectedStatusCode": 405,
    "expectedStatusLine": "HTTP/1.1 405 Method Not Allowed",
    "expectedStatusMessage": "Logout successful"
    
  },
  {
    "testCaseId": "TC_06_userLogoutPatient",
    "scenarioName": "Check patient able to logout  with invalid method",
    "scenarioType": "Negative",
    "endpoint": "/logoutdietician",
    "method": "POST",
    "expectedStatusCode": 405,
    "expectedStatusLine": "HTTP/1.1 405 Method Not Allowed",
    "expectedStatusMessage": "Logout successful"
    
  },

    {
      "testCaseId": "TC_01_createPatient_noAuth",
      "scenarioName": "Set no auth Check dietician able to create patient with valid data",
      "scenarioType": "Negative",
      "endpoint": "/patient",
	  "authType": "No Auth",
      "method": "POST",
      "patientinfo" : 	   { "FirstName": "John",
      "LastName": "Doe",
      "ContactNumber": "9876543210",
      "Email": "john.doe@example.com",
      "Allergy": "None",
      "FoodPreference": "Vegetarian",
      "CuisineCategory": "Indian",
      "DateOfBirth": "1990-01-01"
	  },
      "expectedStatusCode": 401,
      "expectedStatusLine": "HTTP/1.1 401 Unauthorized",
      "expectedContentType": "application/json"
    },
    {
      "testCaseId": "TC_02_createPatient_adminToken",
      "scenarioName": "Set admin bearer token Check admin able to create patient with valid data and admin token",
      "scenarioType": "Negative",
      "endpoint": "/patient",
      "method": "POST",
	  "authType": "Admin Token",
       "patientinfo" : 	   {"FirstName": "Alice",
      "LastName": "Admin",
      "ContactNumber": "8765432109",
      "Email": "alice.admin@example.com",
      "Allergy": "None",
      "FoodPreference": "Vegan",
      "CuisineCategory": "North Indian",
      "DateOfBirth": "1985-05-12"
	  },
      "expectedStatusCode": 403,
      "expectedStatusLine": "HTTP/1.1 403 Forbidden",
      "expectedContentType": "application/json"
    },
    {
      "testCaseId": "TC_03_createPatient_patientToken",
      "scenarioName": "Set patient bearer token Check patient able to create patient with valid data and patient token",
      "scenarioType": "Negative",
      "endpoint": "/patient",
      "method": "POST",
	  "authType": "Admin Token",
       "patientinfo" : 	   {"FirstName": "Bob",
      "LastName": "Patient",
      "ContactNumber": "9123456780",
      "Email": "bob.patient@example.com",
      "Allergy": "None",
      "FoodPreference": "Non-Vegetarian",
      "CuisineCategory": "South Indian",
      "DateOfBirth": "1988-09-15"
	  },
      "expectedStatusCode": 403,
      "expectedStatusLine": "HTTP/1.1 403 Forbidden",
      "expectedContentType": "application/json"
    },
    {
      "testCaseId": "TC_04_createPatient_dieticianToken",
      "scenarioName": "Set dietician bearer token Check dietician able to create patient with valid data and token",
      "scenarioType": "Positive",
      "endpoint": "/patient",
      "method": "POST",
	  "authType": "Dietician Token",
       "patientinfo" : 	   {"FirstName": "Charlie",
      "LastName": "Healthy",
      "ContactNumber": "9314678901",
      "Email": "charliey.aiet@example.com",
      "Allergy": "NONE",
      "FoodPreference": "Vegetarian",
      "CuisineCategory": "Indian",
      "DateOfBirth": "1989-12-11"
	  },
      "expectedStatusCode": 201,
      "expectedStatusLine": "HTTP/1.1 201 Created",
      "expectedContentType": "application/json"
    },
    {
      "testCaseId": "TC_05_createPatient_validMandatoryOnly",
      "scenarioName": "Check dietician able to create patient only with valid mandatory details",
      "scenarioType": "Positive",
      "endpoint": "/patient",
      "method": "POST",
	  "authType": "Dietician Token",
       "patientinfo" : 	   {"FirstName": "Diana",
      "LastName": "Meds",
      "ContactNumber": "9011345111",
      "Email": "dianay.mandatory@example.com",
      "Allergy": "NONE",
      "FoodPreference": "",
      "CuisineCategory": "Indian",
      "DateOfBirth": "1995-12-10"
	  },
      "expectedStatusCode": 201,
      "expectedStatusLine": "HTTP/1.1 201 Created",
      "expectedContentType": "application/json"
    },
    {
      "testCaseId": "TC_06_createPatient_validAdditionalOnly",
      "scenarioName": "Check dietician able to create patient only with valid additional details",
      "scenarioType": "Negative",
      "endpoint": "/patient",
      "method": "POST",
	  "authType": "Dietician Token",
      "patientinfo" : 	   { "FirstName": "",
      "LastName": "",
      "ContactNumber": "",
      "Email": "",
      "Allergy": "Milk",
      "FoodPreference": "Vegan",
      "CuisineCategory": "Rajasthani",
      "DateOfBirth": ""
	  },
      "expectedStatusCode": 400,
      "expectedStatusLine": "HTTP/1.1 400 Bad Request",
      "expectedContentType": "application/json"
    },
    {
      "testCaseId": "TC_07_createPatient_invalidMandatory",
      "scenarioName": "Check dietician able to create patient with invalid data (mandatory details)",
      "scenarioType": "Negative",
      "endpoint": "/patient",
      "method": "POST",
	  "authType": "Dietician Token",
       "patientinfo" : 	   {"FirstName": "1234",
      "LastName": "@@@@",
      "ContactNumber": "abcd",
      "Email": "invalid.email",
      "Allergy": "",
      "FoodPreference": "",
      "CuisineCategory": "",
      "DateOfBirth": "invalid-date"
	  },
      "expectedStatusCode": 400,
      "expectedStatusLine": "HTTP/1.1 400 Bad Request",
      "expectedContentType": "application/json"
    },
    {
      "testCaseId": "TC_08_createPatient_invalidAdditional",
      "scenarioName": "Check dietician able to create patient with valid mandatory fields and invalid data (additional details)",
      "scenarioType": "Negative",
      "endpoint": "/patient",
      "method": "POST",
	  "authType": "Dietician Token",
       "patientinfo" : 	   {"FirstName": "Eva",
      "LastName": "Good",
      "ContactNumber": "7654321098",
      "Email": "eva.good@example.com",
      "Allergy": "#@@!",
      "FoodPreference": "!!!",
      "CuisineCategory": "12345",
      "DateOfBirth": "1994-07-07"
	  },
      "expectedStatusCode": 400,
      "expectedStatusLine": "HTTP/1.1 400 Bad Request",
      "expectedContentType": "application/json"
    },
    {
      "testCaseId": "TC_09_createPatient_invalidMethod",
      "scenarioName": "Check dietician able to create patient with valid data and invalid method",
      "scenarioType": "Negative",
      "endpoint": "/patient",
      "method": "PUT",
	  "authType": "Dietician Token",
       "patientinfo" : 	   {"FirstName": "Faisal",
      "LastName": "PUTTest",
      "ContactNumber": "9876501234",
      "Email": "faisal.put@example.com",
      "Allergy": "Shellfish",
      "FoodPreference": "Vegetarian",
      "CuisineCategory": "Karnataka",
      "DateOfBirth": "1993-03-03"
	  },
      "expectedStatusCode": 405,
      "expectedStatusLine": "HTTP/1.1 405 Method Not Allowed",
      "expectedContentType": "application/json"
    },
    {
      "testCaseId": "TC_10_createPatient_invalidEndpoint",
      "scenarioName": "Check dietician able to create patient with valid data and invalid endpoint",
      "scenarioType": "Negative",
      "endpoint": "/patients123",
      "method": "POST",
	  "authType": "Dietician Token",
       "patientinfo" : 	   {"FirstName": "George",
      "LastName": "InvalidPath",
      "ContactNumber": "9988776655",
      "Email": "george.endpoint@example.com",
      "Allergy": "Dust",
      "FoodPreference": "Vegetarian",
      "CuisineCategory": "Tamil",
      "DateOfBirth": "1987-12-12"
	  },
      "expectedStatusCode": 404,
      "expectedStatusLine": "HTTP/1.1 404 Not Found",
      "expectedContentType": "application/json"
    },
    {
      "testCaseId": "TC_11_createPatient_invalidContentType",
      "scenarioName": "Check dietician able to create patient with valid data and invalid content type",
      "scenarioType": "Negative",
      "endpoint": "/patient",
      "method": "POST",
	  "authType": "Dietician Token",
       "patientinfo" : 	   {"FirstName": "Helen",
      "LastName": "ContentFail",
      "ContactNumber": "9876512345",
      "Email": "helen.invalidcontent@example.com",
      "Allergy": "Gluten",
      "FoodPreference": "Vegan",
      "CuisineCategory": "Bengali",
      "DateOfBirth": "1996-06-06"
	  },
      "expectedStatusCode": 415,
      "expectedStatusLine": "HTTP/1.1 415 Unsupported Media Type",
      "expectedContentType": "application/json"
    },

	{
	    "testCaseId": "TC_01_getAllPatients_noAuth",
	    "scenarioName": "Set no auth Check dietician able to retrieve all patients",
	    "method": "GET",
	    "endpoint": "/patient",
	    "authType": "No Auth",
	    "expectedStatusCode": 401,
	    "expectedStatusLine": "HTTP/1.1 401 Unauthorized",
	    "expectedContentType": "application/json"
	  },
	  {
	    "testCaseId": "TC_02_getPatients_admintoken",
	    "scenarioName": "Set admin token Check admin able to retrieve all patients",
	    "method": "GET",
	    "endpoint": "/patient",
	    "authType": "Admin Token",
	    "expectedStatusCode": 403,
	    "expectedStatusLine": "HTTP/1.1 403 Forbidden",
	    "expectedContentType": "application/json"
	  },
	  {
	    "testCaseId": "TC_03_getPatients_patienttoken",
	    "scenarioName": "Set patient token Check patient able to retrieve all patients",
	    "method": "GET",
	    "endpoint": "/patient",
	    "authType": "Admin Token",
	    "expectedStatusCode": 403,
	    "expectedStatusLine": "HTTP/1.1 403 Forbidden",
	    "expectedContentType": "application/json"
	  },
	  {
	    "testCaseId": "TC_04_getAllPatients_dieticianTokenSuccess",
	    "scenarioName": "Set dietician token Check dietician able to retrieve all patients",
	    "method": "GET",
	    "endpoint": "/patient",
	    "authType": "Dietician Token",
	    "expectedStatusCode": 200,
	    "expectedStatusLine": "HTTP/1.1 200 OK",
	    "expectedContentType": "application/json"
	  },
	  {
	    "testCaseId": "TC_05_getAllPatients_invalidMethod",
	    "scenarioName": "Check dietician able to retrieve all patient with invalid method PUT",
	    "method": "PUT",
	    "endpoint": "/patient",
	    "authType": "Dietician Token",
	    "expectedStatusCode": 405,
	    "expectedStatusLine": "HTTP/1.1 405 Method Not Allowed",
	    "expectedContentType": "application/json"
	  },
	  {
	    "testCaseId": "TC_06_getAllPatients_invalidEndpoint",
	    "scenarioName": "Check dietician able to retrieve all patient with invalid endpoint",
	    "method": "GET",
	    "endpoint": "/patientss",  
	    "authType": "Dietician Token",
	    "expectedStatusCode": 404,
	    "expectedStatusLine": "HTTP/1.1 404 Not Found",
	    "expectedContentType": "application/json"
	  },
	  {
	      "testCaseId": "TC_01_getAllMorbidities_noAuth",
	      "scenarioName": "Set No Auth Check dietician able to retrieve all morbidities details",
	      "method": "GET",
	      "endpoint": "/morbidity",
	      "authType": "No Auth",
	      "expectedStatusCode": 401,
	      "expectedStatusLine": "HTTP/1.1 401 Unauthorized",
	      "expectedContentType": "application/json"
	    },
	    {
	      "testCaseId": "TC_02_getAllMorbidities_patientToken",
	      "scenarioName": "Set PAtient Token Check pateint is able to retrieve all morbidities details",
	      "method": "GET",
	      "endpoint": "/morbidity",
	      "authType": "Patient Token",
	      "expectedStatusCode": 403,
	      "expectedStatusLine": "HTTP/1.1 403 Forbidden",
	      "expectedContentType": "application/json"
	    },
	    {
	      "testCaseId": "TC_03_getAllMorbidities_adminToken",
	      "scenarioName": "Set Admin Token Check admin able to retrieve all morbidities details",
	      "method": "GET",
	      "endpoint": "/morbidity",
	      "authType": "Admin Token",
	      "expectedStatusCode": 200,
	      "expectedStatusLine": "HTTP/1.1 200 OK",
	      "expectedContentType": "application/json"
	    },
	    {
	      "testCaseId": "TC_04_postMorbidities_adminToken_invalidMethod",
	      "scenarioName": "Set Admin Token Check admin able to retrieve all morbidities details with invalid method",
	      "method": "POST",
	      "endpoint": "/morbidity",
	      "authType": "Admin Token",
	      "expectedStatusCode": 415,
	      "expectedStatusLine": "HTTP/1.1 415 Unsupported Media Type",
	      "expectedContentType": "application/json"
	    },
	    {
	      "testCaseId": "TC_05_getMorbidities_adminToken_invalidEndpoint",
	      "scenarioName": "Set Admin Token Check admin able to retrieve all morbidities details with invalid endpoint",
	      "method": "GET",
	      "endpoint": "/morbidity/invalid",
	      "authType": "Admin Token",
	      "expectedStatusCode": 404,
	      "expectedStatusLine": "HTTP/1.1 404 Not Found",
	      "expectedContentType": "application/json"
	    },
	    {
	      "testCaseId": "TC_06_getAllMorbidities_dieticianToken",
	      "scenarioName": "Set Dietician Token Check dietician able to retrieve all morbidities details",
	      "method": "GET",
	      "endpoint": "/morbidity",
	      "authType": "Dietician Token",
	      "expectedStatusCode": 200,
	      "expectedStatusLine": "HTTP/1.1 200 OK",
	      "expectedContentType": "application/json"
	    },
	    {
	      "testCaseId": "TC_07_postMorbidities_dieticianToken_invalidMethod",
	      "scenarioName": "Set Dietician Token Check dietician able to retrieve all morbidities details with invalid method",
	      "method": "POST",
	      "endpoint": "/morbidity",
	      "authType": "Dietician Token",
	      "expectedStatusCode": 415,
	      "expectedStatusLine": "HTTP/1.1 415 Unsupported Media Type",
	      "expectedContentType": "application/json"
	    },
	    {
	      "testCaseId": "TC_08_getMorbidities_dieticianToken_invalidEndpoint",
	      "scenarioName": "Set Dietician Token Check dietician able to retrieve all morbidities details with invalid endpoint",
	      "method": "GET",
	      "endpoint": "/morbidity/invalid",
	      "authType": "Dietician Token",
	      "expectedStatusCode": 404,
	      "expectedStatusLine": "HTTP/1.1 404 Not Found",
	      "expectedContentType": "application/json"
	    },
		{
		    "testCaseId": "TC_01_getMorbidity_dietician_noAuth",
		    "scenarioName": "Set No Auth Check dietician able to retrieve morbidity by name",
		    "method": "GET",
		    "endpoint": "/morbidity/TSH",
		    "authType": "No Auth",
		    "expectedStatusCode": 401,
		    "expectedStatusLine": "HTTP/1.1 401 Unauthorized",
		    "expectedContentType": "application/json"
		  },
		  {
		    "testCaseId": "TC_02_getMorbidity_patient_forbidden",
		    "scenarioName": "Set Patient Token Check patient is able to retrieve morbidity by name",
		    "method": "GET",
		    "endpoint": "/morbidity/TSH",
		    "authType": "Patient Token",
		    "expectedStatusCode": 403,
		    "expectedStatusLine": "HTTP/1.1 403 Forbidden",
		    "expectedContentType": "application/json"
		  },
		  {
		    "testCaseId": "TC_03_getMorbidity_admin_valid",
		    "scenarioName": "Set Admin Token Check admin able to retrieve morbidity by name",
		    "method": "GET",
		    "endpoint": "/morbidity/TSH",
		    "authType": "Admin Token",
		    "expectedStatusCode": 200,
		    "expectedStatusLine": "HTTP/1.1 200 OK",
		    "expectedContentType": "application/json"
		  },
		  {
		    "testCaseId": "TC_04_getMorbidity_admin_invalidMethod",
		    "scenarioName": "Set Admin Token Check admin able to retrieve morbidity by name with invalid method",
		    "method": "POST",
		    "endpoint": "/morbidity/TSH",
		    "authType": "Admin Token",
		    "expectedStatusCode": 405,
		    "expectedStatusLine": "HTTP/1.1 405 Method Not Allowed",
		    "expectedContentType": "application/json"
		  },
		  {
		    "testCaseId": "TC_05_getMorbidity_admin_notFound",
		    "scenarioName": "Set Admin Token Check admin able to retrieve non-existing morbidity by name",
		    "method": "GET",
		    "endpoint": "/morbidity/Thyroid",
		    "authType": "Admin Token",
		    "expectedStatusCode": 404,
		    "expectedStatusLine": "HTTP/1.1 404 Not Found",
		    "expectedContentType": "application/json"
		  },
		  {
		    "testCaseId": "TC_06_getMorbidity_admin_invalidEndpoint",
		    "scenarioName": "Set Admin Token Check admin able to retrieve morbidity by name with invalid endpoint",
		    "method": "GET",
		    "endpoint": "/morbidity/TSH1",
		    "authType": "Admin Token",
		    "expectedStatusCode": 404,
		    "expectedStatusLine": "HTTP/1.1 404 Not Found",
		    "expectedContentType": "application/json"
		  },
		  {
		    "testCaseId": "TC_07_getMorbidity_dietician_valid",
		    "scenarioName": "Set Dietician Token Check dietician able to retrieve morbidity by name",
		    "method": "GET",
		    "endpoint": "/morbidity/TSH",
		    "authType": "Dietician Token",
		    "expectedStatusCode": 200,
		    "expectedStatusLine": "HTTP/1.1 200 OK",
		    "expectedContentType": "application/json"
		  },
		  {
		    "testCaseId": "TC_08_getMorbidity_dietician_invalidMethod",
		    "scenarioName": "Set Dietician Token Check dietician able to retrieve morbidity by name with invalid method",
		    "method": "POST",
		    "endpoint": "/morbidity/TSH",
		    "authType": "Dietician Token",
		    "expectedStatusCode": 405,
		    "expectedStatusLine": "HTTP/1.1 405 Method Not Allowed",
		    "expectedContentType": "application/json"
		  },
		  {
		    "testCaseId": "TC_09_getMorbidity_dietician_notFound",
		    "scenarioName": "Set Dietician Token Check dietician able to retrieve non-existing morbidity by name",
		    "method": "GET",
		    "endpoint": "/morbidity/Thyroid",
		    "authType": "Dietician Token",
		    "expectedStatusCode": 404,
		    "expectedStatusLine": "HTTP/1.1 404 Not Found",
		    "expectedContentType": "application/json"
		  },
		  {
		    "testCaseId": "TC_10_getMorbidity_dietician_invalidEndpoint",
		    "scenarioName": "Set Dietician Token Check dietician able to retrieve morbidity by name with invalid endpoint",
		    "method": "GET",
		    "endpoint": "/morbiditybyname/TSH1",
		    "authType": "Dietician Token",
		    "expectedStatusCode": 404,
		    "expectedStatusLine": "HTTP/1.1 404 Not Found",
		    "expectedContentType": "application/json"
		  },
		 

	
	{
		    "scenarioName": "Check admin able to retrieve dietician by invalid id",
		    "endpoint": "/dietician",
		    "invalidDieticianId": 99999999,
		    "expectedStatusCode": 404,
		    "expectedStatusLine": "HTTP/1.1 404 Not Found"

		  },
		  
		  {
		  	    "scenarioName": "Check admin able to retrieve dietician by id with invalid endpoint",
		  	    "endpoint": "/dieticians",
				"validDieticianId": 123,
		  	    "expectedStatusCode": 404,
		  	    "expectedStatusLine": "HTTP/1.1 404 Not Found"


		  	  },
			  
			  
			  
			  {
			    "scenarioName": "Check admin able to update dietician with valid data , dietician id and token",
			    "endpoint": "/dietician",
			    "validDieticianId": 564, 
				
			    "FirstName": "ulMeera",
			    "LastName": "uRajput",
			    "ContactNumber": "5848022338",
			    "DateOfBirth": "1972-08-25",
			    "Email": "umeera.rajp@gmail.com",
			    "loginPassword": "Teach00",
			    "HospitalName": "ApolloHospitals",
			    "HospitalStreet": "Street21",
			    "HospitalCity": "Hmyderabad",
			    "HospitalPincode": "500001",
			    "Education": "MDNutrition",
			    "expectedStatusCode": 200,
			    "expectedStatusLine": "HTTP/1.1 200 OK"
			  }
		  	  


  ]

